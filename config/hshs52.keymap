/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define NAV_L    3
#define SYM_L    4
#define ADJ_L    5
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Y)

&lt { flavor = "hold-preferred"; };

/ {
    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            /* COLEMAK-DH
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   F   |   P   |   B   |-----------------------------------|   J   |   L   |   U   |   Y   |   ;   | BKSPC |
 * | TAB   |   A   |   R   |   S   |   T   |   G   |-----------------------------------|   M   |   N   |   E   |   I   |   O   | ENTER |
 * | SHIFT |   Z   |   X   |   C   |   D   |   V   |   '   |-------------------|   /   |   K   |   H   |   ,   |   .   |  Up   | SHIFT |
 * | Mute  |  ESC  | CTRL  |-------|  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |-------| Left  | Down  | Right |
 */

            bindings = <
&kp TAB     &kp Q  &kp W      &kp F  &kp P     &kp G                                                                  &kp J      &kp L  &kp U      &kp Y     &kp SEMI  &kp DELETE
&kp ESCAPE  &kp A  &kp R      &kp S  &kp T     &kp D                                                                  &kp H      &kp N  &kp E      &kp I     &kp O     &kp APOSTROPHE
&kp LCTRL   &kp Z  &kp X      &kp C  &kp V     &kp B            &tog 1                               &tog 2           &kp K      &kp M  &kp COMMA  &kp DOT   &kp UP    &kp PRINTSCREEN
&kp GRAVE   &kp E  &kp SPACE         &kp LGUI  &lt 3 BACKSPACE  &kp LSHIFT  &kp LEFT_ALT  &kp ENTER  &kp RIGHT_SHIFT  &kp SPACE  &mo 4             &kp LEFT  &kp DOWN  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        swap_hands {
            bindings = <
&trans  &trans  &kp Y   &kp U   &kp L   &kp J                                   &kp G   &kp P   &kp F  &kp W   &kp Q   &trans
&trans  &kp O   &kp I   &kp E   &kp N   &kp H                                   &kp D   &kp T   &kp S  &kp R   &kp A   &trans
&trans  &trans  &trans  &trans  &kp M   &kp K   &trans                  &trans  &kp B   &kp V   &kp C  &kp X   &kp Z   &trans
&trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        steno_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans    &trans
&trans  &kp Q   &kp W   &kp E   &kp R   &kp T                                   &kp Y   &kp U   &kp I   &kp O   &kp P     &kp LBKT
&trans  &kp A   &kp S   &kp D   &kp F   &kp G   &trans                  &trans  &kp H   &kp J   &kp K   &kp L   &kp SEMI  &kp SQT
&trans  &trans  &trans          &trans  &kp C   &kp V   &trans  &trans  &kp N   &kp M   &trans          &trans  &trans    &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans  &kp HOME         &kp N7     &kp N8  &kp N9  &kp QUESTION                                                &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UP          &kp LESS_THAN  &kp GREATER_THAN  &kp CAPSLOCK
&trans  &kp N0           &kp N4     &kp N5  &kp N6  &kp LEFT_PARENTHESIS                                        &kp MINUS         &kp LEFT_ARROW     &kp DOWN_ARROW  &kp RIGHT      &kp SLASH         &kp BACKSLASH
&trans  &kp EXCLAMATION  &kp N1     &kp N2  &kp N3  &kp RIGHT_PARENTHESIS  &bootloader                  &trans  &kp UNDERSCORE    &kp EQUAL          &kp PLUS        &kp HASH       &kp AT_SIGN       &kp END
&trans  &kp LEFT         &kp RIGHT          &trans  &trans                 &trans       &trans  &trans  &trans  &trans            &trans                             &kp PAGE_UP    &trans            &kp PAGE_DOWN
            >;
        };

        fn_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans                                  &trans  &kp KP_N7  &kp KP_N8  &kp KP_N9             &kp KP_NUMLOCK     &bt BT_NXT
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans                                  &trans  &kp KP_N4  &kp KP_N5  &kp KP_N6             &kp KP_N0          &bt BT_PRV
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans                  &trans  &trans  &kp KP_N1  &kp KP_N2  &kp KP_N3             &kp C_VOLUME_UP    &bt BT_CLR
&trans  &trans   &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_INC
            >;
        };
    };
};
